(()=>{"use strict";var e={185:function(e,t,s){var r,n=this&&this.__createBinding||(Object.create?function(e,t,s,r){void 0===r&&(r=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,r,n)}:function(e,t,s,r){void 0===r&&(r=s),e[r]=t[s]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||(r=function(e){return r=Object.getOwnPropertyNames||function(e){var t=[];for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&(t[t.length]=s);return t},r(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var s=r(e),o=0;o<s.length;o++)"default"!==s[o]&&n(t,e,s[o]);return a(t,e),t});Object.defineProperty(t,"__esModule",{value:!0}),t.executeCommand=p,t.getWorkspacePath=d,t.getUmbrellaRootPath=u,t.commandExists=async function(e){try{return await p(`which ${e}`,!0),!0}catch(e){return!1}};const i=o(s(317)),c=o(s(398)),l=o(s(896)),m=o(s(928));function p(e,t=!1,s){return new Promise(((r,n)=>{const a=s||u()||d(),o={cwd:a,maxBuffer:5242880};console.log(`Executing command: ${e} in directory: ${a}`),t?i.exec(e,o,((e,t,s)=>{if(e)return console.error(`Command execution error: ${e.message}`),console.error(`Command stderr: ${s}`),void n(e);r(t.toString())})):i.exec(e,o,(e=>{if(e)return console.error(`Command execution error: ${e.message}`),void n(e);r("")}))}))}function d(){const e=c.workspace.workspaceFolders;if(e&&e.length>0)return e[0].uri.fsPath}function u(){const e=d();if(!e)return;if(h(e))return e;const t=m.join(e,"..","apps"),s=m.join(e,"..");if(l.existsSync(t)&&h(s))return s;let r=e;for(let e=0;e<5;e++){const e=m.dirname(r);if(h(e))return e;if(e===r)break;r=e}r=e;for(let e=0;e<5;e++){if(l.existsSync(m.join(r,"mix.exs")))return r;const e=m.dirname(r);if(e===r)break;r=e}}function h(e){return l.existsSync(m.join(e,"mix.exs"))&&l.existsSync(m.join(e,"apps"))&&l.statSync(m.join(e,"apps")).isDirectory()}},265:function(e,t,s){var r,n=this&&this.__createBinding||(Object.create?function(e,t,s,r){void 0===r&&(r=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,r,n)}:function(e,t,s,r){void 0===r&&(r=s),e[r]=t[s]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||(r=function(e){return r=Object.getOwnPropertyNames||function(e){var t=[];for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&(t[t.length]=s);return t},r(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var s=r(e),o=0;o<s.length;o++)"default"!==s[o]&&n(t,e,s[o]);return a(t,e),t});Object.defineProperty(t,"__esModule",{value:!0}),t.activate=async function(e){console.log("GraphOS extension is now active");const t=new c.ServerProvider,s=new l.TaskProvider;i.window.registerTreeDataProvider("graphos-sidebar",t),i.window.registerTreeDataProvider("graphos-tasks",s);let r=!1;const n=i.window.createStatusBarItem(i.StatusBarAlignment.Left,100);n.text="$(beaker) mix",n.tooltip="Mix Tasks",n.command="graphos.showMixMenu",n.color=new i.ThemeColor("statusBarItem.prominentForeground"),n.backgroundColor=new i.ThemeColor("statusBarItem.prominentBackground"),n.show();const a=i.window.createStatusBarItem(i.StatusBarAlignment.Left,99);a.text="$(broadcast) mcp",a.tooltip="Model Context Protocol",a.command="graphos.showMcpMenu",a.color=new i.ThemeColor("statusBarItem.prominentForeground"),a.backgroundColor=new i.ThemeColor("statusBarItem.prominentBackground"),a.show(),e.subscriptions.push(n,a);const o=async()=>{r=await p(),a.text=r?"$(broadcast) mcp $(debug-start)":"$(broadcast) mcp $(debug-stop)",a.tooltip=`Model Context Protocol (Server ${r?"Running":"Stopped"})`};await o();const d=setInterval((async()=>{await o()}),5e3);e.subscriptions.push({dispose:()=>clearInterval(d)}),e.subscriptions.push(i.commands.registerCommand("graphos.showMixMenu",(async()=>{const e=await s.getTasks(),t=new Map;for(const s of e){const e=s.label.includes(".")?s.label.split(".")[0]:"other";t.has(e)||t.set(e,[]),t.get(e)?.push(s)}const r=[];r.push({label:"$(list-unordered) Task Menu",description:"Open the task menu with all mix tasks"}),r.push({label:"$(dash) Namespaces",kind:i.QuickPickItemKind.Separator});for(const[e,s]of t.entries())r.push({label:`$(symbol-namespace) ${e}`,description:`${s.length} tasks`});const n=await i.window.showQuickPick(r,{placeHolder:"Select a Mix task or namespace"});if(n)if("$(list-unordered) Task Menu"===n.label)i.commands.executeCommand("graphos.showTaskMenu");else if(n.label.startsWith("$(symbol-namespace)")){const e=n.label.replace("$(symbol-namespace) ",""),s=(t.get(e)||[]).map((e=>({label:`$(terminal-bash) ${e.label}`,description:e.description}))),r=await i.window.showQuickPick(s,{placeHolder:`Select a task from ${e}`});if(r){const e=r.label.replace("$(terminal-bash) ","");i.commands.executeCommand("graphos.runTask",e)}}})),i.commands.registerCommand("graphos.showMcpMenu",(async()=>{const e=[];e.push({label:"$(vm) Server Control",kind:i.QuickPickItemKind.Separator}),r?(e.push({label:"$(debug-stop) Stop Server",description:"Stop the GraphOS server"}),e.push({label:"$(debug-restart) Restart Server",description:"Restart the GraphOS server"}),e.push({label:"$(terminal) Join Server Session",description:"Join the GraphOS server session"})):e.push({label:"$(debug-start) Start Server",description:"Start the GraphOS server"}),e.push({label:"$(browser) Server Tools",kind:i.QuickPickItemKind.Separator}),e.push({label:"$(inspect) Inspector",description:"Open the MCP Inspector"}),e.push({label:"$(bug) Debug Mode",description:"Open the MCP Debug mode"}),e.push({label:"$(broadcast) SSE",description:"Open the SSE endpoint"}),e.push({label:"$(beaker) Test Tools",kind:i.QuickPickItemKind.Separator}),e.push({label:"$(beaker) Test Client",description:"Run the MCP test client"}),e.push({label:"$(symbol-enum) Test Types",description:"Run MCP type parity tests"}),e.push({label:"$(server) Test Server",description:"Run MCP test server"}),e.push({label:"$(globe) Test Endpoint",description:"Run MCP test endpoint"});const t=await i.window.showQuickPick(e,{placeHolder:"Select MCP action"});if(t)switch(t.label){case"$(debug-stop) Stop Server":i.commands.executeCommand("graphos.stopServer");break;case"$(debug-restart) Restart Server":i.commands.executeCommand("graphos.restartServer");break;case"$(terminal) Join Server Session":i.commands.executeCommand("graphos.joinServer");break;case"$(debug-start) Start Server":i.commands.executeCommand("graphos.startServer");break;case"$(inspect) Inspector":i.commands.executeCommand("graphos.openInspector");break;case"$(bug) Debug Mode":i.commands.executeCommand("graphos.openDebug");break;case"$(broadcast) SSE":i.commands.executeCommand("graphos.openSSE");break;case"$(beaker) Test Client":i.commands.executeCommand("graphos.runTestClient");break;case"$(symbol-enum) Test Types":i.commands.executeCommand("graphos.runTestTypes");break;case"$(server) Test Server":i.commands.executeCommand("graphos.runTestServer");break;case"$(globe) Test Endpoint":i.commands.executeCommand("graphos.runTestEndpoint")}})),i.commands.registerCommand("graphos.startServer",(async()=>{const e=i.window.createTerminal("GraphOS Server");e.sendText("mix dev.server start"),e.show(),setTimeout((()=>{(0,m.executeCommand)("open http://localhost:4000")}),3e3),t.refresh(),await o()})),i.commands.registerCommand("graphos.stopServer",(async()=>{const e=i.window.createTerminal("GraphOS Server");e.sendText("mix dev.server stop"),e.show(),t.refresh(),await o()})),i.commands.registerCommand("graphos.restartServer",(async()=>{const e=i.window.createTerminal("GraphOS Server");e.sendText("mix dev.server restart"),e.show(),setTimeout((()=>{(0,m.executeCommand)("open http://localhost:4000")}),3e3),t.refresh(),await o()})),i.commands.registerCommand("graphos.joinServer",(async()=>{const e=i.window.createTerminal("GraphOS Server Session");e.sendText("mix dev.server join"),e.show()})),i.commands.registerCommand("graphos.checkServerStatus",(async()=>{const e=i.window.createTerminal("GraphOS Server Status");e.sendText("mix dev.server status"),e.show(),t.refresh(),await o()})),i.commands.registerCommand("graphos.openBrowser",(async()=>{(0,m.executeCommand)("open http://localhost:4000")})),i.commands.registerCommand("graphos.openInspector",(async()=>{if(await p())i.window.showInformationMessage("Using existing server session..."),(0,m.executeCommand)("open http://localhost:4000/inspector");else{const e=i.window.createTerminal("GraphOS Inspector");e.sendText("mix mcp.inspect"),e.show(),setTimeout((()=>{(0,m.executeCommand)("open http://localhost:4000/inspector")}),3e3)}t.refresh(),await o()})),i.commands.registerCommand("graphos.openDebug",(async()=>{if(await p())i.window.showInformationMessage("Using existing server session..."),(0,m.executeCommand)("open http://localhost:4000/debug/api");else{const e=i.window.createTerminal("GraphOS Debug");e.sendText("mix mcp.debug"),e.show(),setTimeout((()=>{(0,m.executeCommand)("open http://localhost:4000/debug/api")}),3e3)}t.refresh(),await o()})),i.commands.registerCommand("graphos.openSSE",(async()=>{if(await p())i.window.showInformationMessage("Using existing server session..."),(0,m.executeCommand)("open http://localhost:4000/sse");else{const e=i.window.createTerminal("GraphOS SSE");e.sendText("mix mcp.sse"),e.show(),setTimeout((()=>{(0,m.executeCommand)("open http://localhost:4000/sse")}),3e3)}t.refresh(),await o()})),i.commands.registerCommand("graphos.runTestClient",(async()=>{const e=i.window.createTerminal("GraphOS Test Client");e.sendText("mix mcp.test_client"),e.show()})),i.commands.registerCommand("graphos.runTestTypes",(async()=>{const e=i.window.createTerminal("GraphOS Test Types");e.sendText("mix mcp.test_types"),e.show()})),i.commands.registerCommand("graphos.runTestServer",(async()=>{const e=i.window.createTerminal("GraphOS Test Server");e.sendText("mix mcp.test_server"),e.show()})),i.commands.registerCommand("graphos.runTestEndpoint",(async()=>{const e=i.window.createTerminal("GraphOS Test Endpoint");e.sendText("mix mcp.test_endpoint"),e.show()})),i.commands.registerCommand("graphos.showTaskMenu",(async()=>{const e=i.window.createTerminal("GraphOS Task Menu");e.sendText("mix dev.menu"),e.show()})),i.commands.registerCommand("graphos.showMCPTasks",(async()=>{const e=i.window.createTerminal("GraphOS MCP Tasks");e.sendText("mix dev.menu --filter=mcp"),e.show()})),i.commands.registerCommand("graphos.showDevTasks",(async()=>{const e=i.window.createTerminal("GraphOS Dev Tasks");e.sendText("mix dev.menu --filter=dev"),e.show()})),i.commands.registerCommand("graphos.listTasks",(async()=>{const e=i.window.createTerminal("GraphOS Task List");e.sendText("mix dev.tasks"),e.show()})),i.commands.registerCommand("graphos.runTask",(async e=>{if(!e){const t=await s.getTasks(),r=await i.window.showQuickPick(t.map((e=>({label:e.label,description:e.description}))),{placeHolder:"Select a mix task to run"});if(!r)return;e=r.label}const t=i.window.createTerminal(`GraphOS Task: ${e}`);t.sendText(`mix ${e}`),t.show()})),i.commands.registerCommand("graphos.refreshTasks",(()=>{s.refresh()}))),t.refresh(),s.refresh()},t.deactivate=function(){};const i=o(s(398)),c=s(888),l=s(906),m=s(185);async function p(){try{return(await(0,m.executeCommand)("mix dev.server status",!0)).includes("Phoenix server is running")}catch(e){try{return!(await(0,m.executeCommand)('ps aux | grep "[p]hoenix.*server" || echo "No server found"',!0)).includes("No server found")}catch(e){return console.error("Failed to check server status:",e),!1}}}},317:e=>{e.exports=require("child_process")},398:e=>{e.exports=require("vscode")},888:function(e,t,s){var r,n=this&&this.__createBinding||(Object.create?function(e,t,s,r){void 0===r&&(r=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,r,n)}:function(e,t,s,r){void 0===r&&(r=s),e[r]=t[s]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||(r=function(e){return r=Object.getOwnPropertyNames||function(e){var t=[];for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&(t[t.length]=s);return t},r(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var s=r(e),o=0;o<s.length;o++)"default"!==s[o]&&n(t,e,s[o]);return a(t,e),t});Object.defineProperty(t,"__esModule",{value:!0}),t.ServerProvider=t.ServerItem=void 0;const i=o(s(398)),c=s(185);class l extends i.TreeItem{constructor(e,t,s){super(e,t),this.label=e,this.collapsibleState=t,this.command=s}}t.ServerItem=l,t.ServerProvider=class{constructor(){this._onDidChangeTreeData=new i.EventEmitter,this.onDidChangeTreeData=this._onDidChangeTreeData.event,this._serverRunning=!1}refresh(){this.checkServerStatus().then((e=>{this._serverRunning=e,this._onDidChangeTreeData.fire()}))}getTreeItem(e){return e}async getChildren(e){if(e)return[];const t=[],s=new l("Server: "+(this._serverRunning?"Running":"Stopped"),i.TreeItemCollapsibleState.None);return s.iconPath=this._serverRunning?new i.ThemeIcon("debug-start",new i.ThemeColor("terminal.ansiGreen")):new i.ThemeIcon("debug-stop",new i.ThemeColor("terminal.ansiRed")),t.push(s),this._serverRunning?t.push(new l("Stop Server",i.TreeItemCollapsibleState.None,{command:"graphos.stopServer",title:"Stop Server"}),new l("Restart Server",i.TreeItemCollapsibleState.None,{command:"graphos.restartServer",title:"Restart Server"}),new l("Join Server Session",i.TreeItemCollapsibleState.None,{command:"graphos.joinServer",title:"Join Server Session"})):t.push(new l("Start Server",i.TreeItemCollapsibleState.None,{command:"graphos.startServer",title:"Start Server"})),t.push(new l("Open in Browser",i.TreeItemCollapsibleState.None,{command:"graphos.openBrowser",title:"Open in Browser"})),t.push(new l("MCP",i.TreeItemCollapsibleState.Collapsed)),t}async getChildren2(e){return e?"MCP"===e.label?[new l("Inspector",i.TreeItemCollapsibleState.None,{command:"graphos.openInspector",title:"Open Inspector"}),new l("Debug Mode",i.TreeItemCollapsibleState.None,{command:"graphos.openDebug",title:"Open Debug Mode"}),new l("SSE",i.TreeItemCollapsibleState.None,{command:"graphos.openSSE",title:"Open SSE"})]:[]:this.getChildren()}async checkServerStatus(){try{return(await(0,c.executeCommand)("mix dev.server status",!0)).includes("Phoenix server is running")}catch(e){return!1}}}},896:e=>{e.exports=require("fs")},906:function(e,t,s){var r,n=this&&this.__createBinding||(Object.create?function(e,t,s,r){void 0===r&&(r=s);var n=Object.getOwnPropertyDescriptor(t,s);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[s]}}),Object.defineProperty(e,r,n)}:function(e,t,s,r){void 0===r&&(r=s),e[r]=t[s]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||(r=function(e){return r=Object.getOwnPropertyNames||function(e){var t=[];for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&(t[t.length]=s);return t},r(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var s=r(e),o=0;o<s.length;o++)"default"!==s[o]&&n(t,e,s[o]);return a(t,e),t});Object.defineProperty(t,"__esModule",{value:!0}),t.TaskProvider=t.TaskItem=void 0;const i=o(s(398)),c=s(185);class l extends i.TreeItem{constructor(e,t,s,r){super(e,s),this.label=e,this.description=t,this.collapsibleState=s,this.command=r,this.tooltip=t,this.description=t,s===i.TreeItemCollapsibleState.None?this.contextValue="taskItem":this.contextValue="namespaceItem"}}t.TaskItem=l,t.TaskProvider=class{constructor(){this._onDidChangeTreeData=new i.EventEmitter,this.onDidChangeTreeData=this._onDidChangeTreeData.event,this._tasks=[],this._namespaces=new Map}refresh(){this.loadTasks().then((()=>{this._onDidChangeTreeData.fire()}))}getTreeItem(e){return e}async getChildren(e){return e?this.getTasksInNamespace(e.label):this.getNamespaces()}async getTasks(){return 0===this._tasks.length&&await this.loadTasks(),this._tasks}async loadTasks(){try{const e=(0,c.getUmbrellaRootPath)(),t=(0,c.getWorkspacePath)();if(!e&&!t)return void i.window.showWarningMessage("No Elixir project found. Please open a folder containing a mix.exs file.");let s="",r=!0;try{s=await(0,c.executeCommand)("mix dev.tasks",!0)}catch(e){console.log("dev.tasks not available, falling back to mix help"),r=!1;try{s=await(0,c.executeCommand)("mix help",!0)}catch(e){return void i.window.showErrorMessage(`Failed to load Mix tasks: ${e}`)}}const n=s.split("\n");this._tasks=[],this._namespaces=new Map;let a="";if(r)for(const e of n)if(!e.trim()||e.startsWith(" ")||e.startsWith("\t")||e.includes("Available Mix Tasks:")){if(e.trim()&&(e.startsWith(" ")||e.startsWith("\t"))){const t=e.trim().match(/^([a-z0-9._:]+)\s+(.*)/);if(t){const e={label:t[1],description:t[2]||""};this._tasks.push(e),this._namespaces.has(a)||this._namespaces.set(a,[]),this._namespaces.get(a)?.push(e)}}}else a=e.trim();else{let e=!1;for(const t of n){if(t.includes("mix")&&t.includes("# ")){e=!0;continue}if(!e)continue;if(!t.trim()||t.endsWith(":"))continue;const s=t.trim().match(/^([a-z0-9._:]+)\s+#\s+(.*)/);if(s){const e=s[1],t=s[2]||"",r=e.includes(".")?e.split(".")[0]:"mix",n={label:e,description:t};this._tasks.push(n),this._namespaces.has(r)||this._namespaces.set(r,[]),this._namespaces.get(r)?.push(n)}}0===this._tasks.length&&this.addBasicTasks()}0===this._namespaces.size&&this._namespaces.set("mix",this._tasks)}catch(e){i.window.showErrorMessage(`Failed to load Mix tasks: ${e}`),this.addBasicTasks()}}addBasicTasks(){const e=[{label:"compile",description:"Compiles source files"},{label:"deps.get",description:"Gets all out of date dependencies"},{label:"deps.update",description:"Updates the given dependencies"},{label:"test",description:"Runs a project's tests"},{label:"help",description:"Lists all available tasks"},{label:"clean",description:"Deletes generated application files"}];this._tasks=e,this._namespaces.set("mix",e)}async getNamespaces(){0===this._namespaces.size&&await this.loadTasks();const e=[];for(const[t,s]of this._namespaces.entries()){const r=new l(t,`${s.length} tasks`,i.TreeItemCollapsibleState.Collapsed);r.iconPath=new i.ThemeIcon("symbol-namespace"),e.push(r)}return e.sort(((e,t)=>e.label.localeCompare(t.label)))}async getTasksInNamespace(e){return(this._namespaces.get(e)||[]).map((e=>{const t=new l(e.label,e.description,i.TreeItemCollapsibleState.None,{command:"graphos.runTask",title:"Run Task",arguments:[e.label]});return t.iconPath=new i.ThemeIcon("terminal-bash"),t})).sort(((e,t)=>e.label.localeCompare(t.label)))}}},928:e=>{e.exports=require("path")}},t={},s=function s(r){var n=t[r];if(void 0!==n)return n.exports;var a=t[r]={exports:{}};return e[r].call(a.exports,a,a.exports,s),a.exports}(265);module.exports=s})();